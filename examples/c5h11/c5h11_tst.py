#! /usr/bin/env python3

"""
TST calculations for:
nC5H11 <=> C2H4 + nC3H7
sC5H11 <=> C3H6 + C2H5

Output:
nC5H11 <=> C2H4 + nC3H7
T[K]    k[s^-1]      krev[cm^-3 s^-1]   k/krev    Keq          kfit[s^-1]    kfitrev[cm^-3 s^-1]
  300  1.444756e-09  1.257773e-19  1.148662e+10  1.148662e+10  1.381659e-09  1.260008e-19
  400  4.924181e-04  4.372765e-18  1.126102e+14  1.126102e+14  5.125240e-04  4.363662e-18
  500  1.110392e+00  4.270773e-17  2.599979e+16  2.599979e+16  1.159358e+00  4.264001e-17
  600  1.989009e+02  2.157511e-16  9.218997e+17  9.218997e+17  2.037653e+02  2.156801e-16
  800  1.374602e+05  1.957316e-15  7.022892e+19  7.022892e+19  1.350670e+05  1.959779e-15
 1000  7.158521e+06  8.567310e-15  8.355622e+20  8.355622e+20  6.859874e+06  8.580741e-15
 1500  1.436630e+09  8.510131e-14  1.688141e+22  1.688141e+22  1.374861e+09  8.515041e-14
 2000  2.056132e+10  3.468158e-13  5.928600e+22  5.928600e+22  2.046168e+10  3.466851e-13
 2500  1.017085e+11  9.384495e-13  1.083792e+23  1.083792e+23  1.065286e+11  9.376997e-13
           A           n       E/R      MAD%  RMSD% MAXPOSD% MAXNEGD%
kfit    4.632e+11    0.5885   15185.4    3.4    3.7    4.7   -4.4
kfitrev 1.854e-22    3.0200    3211.2    0.1    0.1    0.2   -0.2

sC5H11 <=> C3H6 + C2H5
T[K]    k[s^-1]      krev[cm^-3 s^-1]   k/krev    Keq          kfit[s^-1]    kfitrev[cm^-3 s^-1]
  300  1.722858e-09  8.401399e-20  2.050680e+10  2.050680e+10  1.646799e-09  8.461193e-20
  400  6.090818e-04  2.284194e-18  2.666506e+14  2.666506e+14  6.343312e-04  2.268151e-18
  500  1.438562e+00  1.813888e-17  7.930817e+16  7.930817e+16  1.502760e+00  1.801871e-17
  600  2.700629e+02  7.685465e-17  3.513944e+18  3.513944e+18  2.766885e+02  7.662758e-17
  800  2.035285e+05  5.244127e-16  3.881076e+20  3.881076e+20  1.998827e+05  5.262674e-16
 1000  1.142771e+07  1.834652e-15  6.228819e+21  6.228819e+21  1.094495e+07  1.846744e-15
 1500  2.664812e+09  1.210803e-14  2.200864e+23  2.200864e+23  2.550462e+09  1.217355e-14
 2000  4.277936e+10  3.693018e-14  1.158385e+24  1.158385e+24  4.258610e+10  3.693065e-14
 2500  2.322386e+11  7.984702e-14  2.908545e+24  2.908545e+24  2.432347e+11  7.937366e-14
           A           n       E/R      MAD%  RMSD% MAXPOSD% MAXNEGD%
kfit    2.611e+10    1.0557   15069.4    3.4    3.7    4.7   -4.4
kfitrev 6.213e-20    1.9642    3268.3    0.5    0.6    0.7   -0.7
"""

from me2d import RoVib
from me2d import tstrates, equilibrium_consts_dissoc, bimol_tstrate, fit_arrhenius


nc5h11 = RoVib(\
    nsym = 1,
    rotA = 0.609391,
    rotB2D = 0.0654364,
    freq = [113.598, 120.817, 184.873, 247.846, 401.834, 410.665, 469.376, 731.748,
            780.563, 872.445, 922.568, 947.387, 1043.24, 1079.07, 1098.31, 1105.21,
            1168.56, 1235.09, 1289.54, 1312.72, 1337.06, 1371.45, 1416.27, 1420.43,
            1466.27, 1468.73, 1493.98, 1500.6, 1503.72, 1512.2, 2952.34, 3021.08,
            3024.77, 3032.49, 3036.95, 3054.91, 3077.94, 3109.68, 3116.83, 3146.86,
            3253.57],
    fscale = 0.95,
    introt = [(10.1083, 2, 0, 0)],  # free rotor
    states = [(1, 0), (2, 9.01), (2, 89.1), (2, 143.23), (2, 361.86)] # conformers
    )

sc5h11 = RoVib(\
    nsym = 1,
    rotA = 0.64564,
    rotB2D = 0.0633999,
    freq = [117.076, 181.245, 241.578, 338.637, 405.582, 409.762, 740.463, 862.016,
            887.444, 947.624, 982.493, 1052.52, 1079.03, 1093.84, 1146.64, 1180.52,
            1253.02, 1286.53, 1326.41, 1370.7, 1409.52, 1420.08, 1435.14, 1470.15,
            1477.71, 1488.83, 1498.07, 1502.87, 1510.26, 2940.31, 2972.28, 2998.95,
            3036.22, 3038.24, 3041.47, 3074.74, 3109.06, 3115.43, 3117.51, 3173.02],
    fscale = 0.95,
    introt = [(1.56492, 3, 0, 0),  # free rotor
              (5.94229, 3, 0, 0)],  # free rotor
    states = [(1, 0), (2, 1.99), (2, 5.86), (2, 38.73), (2, 658.54)] # conformers
    )

c2h4 = RoVib(\
    nsym = 4,
    rotA = 4.89739,
    rotB2D = 0.92091,
    freq = [841.004, 984.941, 996.382, 1066.71, 1242.3, 1386.92, 1471.45, 1708.75,
            3138.51, 3158.1, 3220.16, 3246.5],
    fscale = 0.95,
    states = [(1, 0)]
    )

nc3h7 = RoVib(\
    nsym = 1,
    rotA = 1.10189,
    rotB2D = 0.279377,
    freq = [250.196, 379.029, 467.993, 762.122, 890.026, 932.685, 1052.69, 1100.62,
            1174.23, 1272.97, 1366.72, 1418.08, 1466.2, 1471.32, 1502.51, 1508.29,
            2965.42, 3031.31, 3041.89, 3115.12, 3122.37, 3146.24, 3253.11],
    fscale = 0.95,
    introt = [(10.5666, 2, 0, 0)],  # free rotor
    states = [(1, 0)]
    )
 
c2h5 = RoVib(\
    nsym = 1,
    rotA = 3.45554,
    rotB2D = 0.732352,
    freq = [109.141, 478.76, 817.705, 979.661, 1077.29, 1193.25, 1401.45, 1467.41,
            1485.28, 1487.74, 2979.47, 3066.05, 3113.43, 3154.77, 3260.22],
    fscale = 0.95,
    introt = [(15.0550, 6, 0, 0)],  # free rotor
    states = [(1, 0)]
    )

c3h6 = RoVib(\
    nsym = 1,
    rotA = 1.56516,
    rotB2D = 0.291208,
    freq = [198.439, 434.301, 594.79, 935.31, 952.92, 956.274, 1033.04, 1077.5,
            1197.14, 1333.27, 1410.44, 1453.51, 1484.3, 1498.36, 1735.37, 3036.59,
            3098.05, 3122.49, 3140.24, 3153.61, 3233.12],
    fscale = 0.95,
    states = [(1, 0)]
    )
    
ts_ncc = RoVib(\
    nsym = 1,
    rotA = 0.229743,
    rotB2D = 0.0854228,
    freq = [119.12, 166.293, 250.424, 295.145, 361.419, 413.49, 571.327, 745.144,
            808.473, 826.663, 861.237, 892.759, 930.289, 954.743, 1018.81, 1083.88,
            1103.39, 1190.6, 1238.7, 1286.39, 1305.51, 1372.36, 1418.59, 1463.33,
            1465.82, 1477.05, 1504.31, 1508.79, 1586.45, 2992.47, 3040.75, 3052.41,
            3112.97, 3115.87, 3121.05, 3141.69, 3153.36, 3213.03, 3223.87, 3248.19],
    fscale = 0.95,
    introt = [(1.05143, 3, 0, 0)],  # free rotor
    states = [(2, 0), (2, 235.81), (2, 247.77), (1, 328.21), (2, 390.09)], # conformers
    freqimg = 474.82
    )


ts_scc = RoVib(\
    nsym = 1,
    rotA = 0.259238,
    rotB2D = 0.0758349,
    freq = [107.052, 136.519, 175.27, 190.914, 316.005, 432.051, 545.709, 663.579,
            771.005, 835.18, 892.786, 928.455, 939.933, 995.211, 1036, 1048.61,
            1081.85, 1194.39, 1217.57, 1294.18, 1402.86, 1404.58, 1439.14, 1473.22,
            1481.02, 1488.19, 1490.39, 1495.77, 1600.04, 3008.6, 3018.98, 3073.54,
            3076.19, 3108.26, 3113.13, 3122.64, 3137.03, 3158.63, 3216.14, 3229.78],
    fscale = 0.95,
    introt = [(0.939439, 3, 0, 0)],  # free rotor
    states = [(2, 0), (2, 0.09), (2, 165.67)], # conformers
    freqimg = 494.809
    )

# relative energies [cm^-1]
E0_nc5h11 = 948.38
E0_sc5h11 = 0.00
E0_ts_ncc = 11391.70
H0_ncc =  8625.83
E0_ts_scc = 10392.83
H0_scc = 7591.92

T = [300., 400., 500., 600., 800., 1000., 1500., 2000., 2500.]
k = tstrates(T, nc5h11, [ts_ncc], [E0_ts_ncc-E0_nc5h11], [H0_ncc-E0_nc5h11])[0]
krev = bimol_tstrate(T, c2h4, nc3h7, ts_ncc, 1, 2, 2, "C2H4", "C3H7", E0_ts_ncc-H0_ncc, E0_nc5h11-H0_ncc)
keq = equilibrium_consts_dissoc(T, nc5h11, c2h4, nc3h7, 2, 1, 2, "C2H4", "C3H7", H0_ncc-E0_nc5h11)
params, kfit, stats = fit_arrhenius(T, k)
paramsrev, kfitrev, statsrev = fit_arrhenius(T, krev)

print("nC5H11 <=> C2H4 + nC3H7")
print("T[K]    k[s^-1]      krev[cm^-3 s^-1]   k/krev    Keq          kfit[s^-1]    kfitrev[cm^-3 s^-1]")
for i in range(len(T)):
    print("%5.0f  %12.6e  %12.6e  %12.6e  %12.6e  %12.6e  %12.6e" 
          % (T[i], k[i], krev[i], k[i]/krev[i], keq[i], kfit[i], kfitrev[i], ))
print("           A           n       E/R      MAD%  RMSD% MAXPOSD% MAXNEGD%")
print("kfit    %9.3e %9.4f %9.1f %6.1f %6.1f %6.1f %6.1f" % (*params, *stats))
print("kfitrev %9.3e %9.4f %9.1f %6.1f %6.1f %6.1f %6.1f" % (*paramsrev, *statsrev))

k = tstrates(T, sc5h11, [ts_scc], [E0_ts_scc-E0_sc5h11], [H0_scc-E0_sc5h11])[0]
krev = bimol_tstrate(T, c2h5, c3h6, ts_scc, 2, 1, 2, "C2H5", "C3H6", E0_ts_scc-H0_scc, E0_sc5h11-H0_scc)
keq = equilibrium_consts_dissoc(T, sc5h11, c2h5, c3h6, 2, 2, 1, "C2H5", "C3H6", H0_scc-E0_sc5h11)
params, kfit, stats = fit_arrhenius(T, k)
paramsrev, kfitrev, statsrev = fit_arrhenius(T, krev)

print("")
print("sC5H11 <=> C3H6 + C2H5")
print("T[K]    k[s^-1]      krev[cm^-3 s^-1]   k/krev    Keq          kfit[s^-1]    kfitrev[cm^-3 s^-1]")
for i in range(len(T)):
    print("%5.0f  %12.6e  %12.6e  %12.6e  %12.6e  %12.6e  %12.6e" 
          % (T[i], k[i], krev[i], k[i]/krev[i], keq[i], kfit[i], kfitrev[i], ))
print("           A           n       E/R      MAD%  RMSD% MAXPOSD% MAXNEGD%")
print("kfit    %9.3e %9.4f %9.1f %6.1f %6.1f %6.1f %6.1f" % (*params, *stats))
print("kfitrev %9.3e %9.4f %9.1f %6.1f %6.1f %6.1f %6.1f" % (*paramsrev, *statsrev))